//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler_states[2]                 sampler      NA          NA             s2      1 
// texture_maps[0]                   texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 2
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.texcoord.x; v1.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 9 "C:\Users\koro\OneDrive\チEクトップ\ゲーム制作\Source\Shader\luminance_extraction_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s2  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 10
mov r0.w, r0.w  // r0.w <- alpha

#line 11
dp3 r1.x, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
mov r1.y, l(-0.600000)
add r1.z, r1.y, l(0.800000)
add r1.x, r1.y, r1.x
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
mul r1.x, r1.y, r1.x
max r1.x, r1.x, l(0.000000)
min r1.x, r1.x, l(1.000000)
mul r1.y, r1.x, l(-2.000000)
add r1.y, r1.y, l(3.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, r1.y
mul r0.xyz, r0.xyzx, r1.xxxx

#line 12
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 18 instruction slots used
