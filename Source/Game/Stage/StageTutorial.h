#pragma once
#include "Stage.h"

#include "../Box.h"

#include "../../Mame/Graphics/Effect.h"

// チュートリアルステージ
class StageTutorial : public Stage
{
public:
    StageTutorial();
    ~StageTutorial()override;

    void Initialize()                     override;  // 初期化
    void Finalize()                       override;  // 終了処理
    void Begin()                          override;  // 毎フレーム一番最初に呼ばれる
    void Update(const float& elapsedTime) override;  // 更新処理
    void End()                            override;  // 毎フレーム一番最後に呼ばれる
    void Render(const float& elapsedTime) override;  // 描画処理
    void DrawDebug()                      override;  // デバッグ描画

private:
    void TutorialStateUpdate(float elapsedTime);
    void TutorialStateRender(float elapsedTime);

    int tutorialState = 0;
    

    enum STATE
    {
        MoveReception,  // 移動受付
        JumpReception,  // ジャンプ受付
    };

private:
    int stickMoveState = 0; // スティック動き
    float stickTime = 0;
    void StickState(float elapsedTime);

private:
    // 仮にbossクラスで表示している
    std::unique_ptr<Box> back = nullptr;
    std::unique_ptr<Box> box = nullptr;

    // UI

    Effect* effect = nullptr;
};

